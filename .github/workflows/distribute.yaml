name: Publish

on:
  release:
    # We'll run this workflow when a new GitHub release is created
    types: [released]

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Base64 decodes and pipes the GPG key content into the secret file
      - name: Prepare environment
        env:
          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
          GPG_SECRET_KEY_RING_FILE: ${{ secrets.GPG_SECRET_KEY_RING_FILE }}
        run: |
          git fetch --unshallow
          sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > 'GPG_SECRET_KEY_RING_FILE'"

      - name: Attatch the maven creitenal
        env:
          MAVEN_USER_NAME: ${{ secrets.FACEBOOK_KEYS }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: |
          echo -e "mavenCentralUsername=\"MAVEN_USER_NAME\"" >> gradle.properties
          echo -e "\mavenCentralPassword=\"MAVEN_PASSWORD\"" >> gradle.properties

      - name: Creating local properties file
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
          GPG_SECRET_KEY_RING_FILE: ${{ secrets.GPG_SECRET_KEY_RING_FILE }}
        run: |
          echo -e "\signing.keyId=\"GPG_KEY_ID\"" >> local.properties
          echo -e "\signing.password=\"GPG_PASSWORD\"" >> local.properties
          echo -e "\signing.secretKeyRingFile=\"GPG_SECRET_KEY_RING_FILE\"" >> local.properties

      # Runs upload, and then closes & releases the repository
      - name: Publish KotlinShaver to MavenCentral
        run: ./gradlew publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository

      - name: Publish Kotlinkinfer to MavenCentral
        run: ./gradlew publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository